# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Construir la app
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 21.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Build the project
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci --progress=false
    - run: npm run build --if-present
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
          name: Build
          path: dist
          retention-days: 7
  test:
    name: Test de la app
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [ 21.x]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: Build
        path: dist
    - run: echo "Ejecutando las pruebas"
      name: Test node
  deploy:
    name: Subir la pagina al server
    runs-on: ubuntu-latest
    container: alpine
    needs: [test]
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: Build
        path: dist
    - name: Instalar dependencias requeridas
      run: apk add --no-cache rsync openssh
    - name: Crear carpeta ssh
      run: mkdir -p ~/.ssh
    - name: Crear clave privada
      run: |
       echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
       install -m 600 -D /dev/null ~/.ssh/id_rsa
       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
       host='52.71.205.244'
       hosts="$(dig +short "$host" | grep -v '\.$' | sed --null-data 's|\n|,|g')$host"
       ssh-keyscan -H "$hosts" > ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{  secrets.SSH_PRIVATE_KEY  }}
    - name: Dar permisos a la clave privada
      run: chmod 600 ~/.ssh/*
    - name: Configurar opciones de la clave privada
      run: echo -e "Host *\n\t StrictHostKeyChecking no\n\n" > ~/.ssh/config
    - name: Test
      run: |
        echo $SSH_PRIVATE_KEY
        echo "hola"
        cat ~/.ssh/id_rsa
        echo "hola"
        cat ~/.ssh/config
      env:
        SSH_PRIVATE_KEY: ${{  secrets.SSH_PRIVATE_KEY  }}
    - name: SSH test
      run:  ssh -v deployer@52.71.205.244
    - name: Copiar archivos al servidor
      run: rsync -rav --delete dist/ deployer@52.71.205.244:/var/www/todolist/html/dist
    


    
